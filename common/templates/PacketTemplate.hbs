import type { IPacket } from "../Packet";
import { EPacketId } from "./PacketId";
import { encode, decode } from "@msgpack/msgpack";

export class {{name}} implements IPacket {
  constructor({{#each props}}{{#unless @first}}, {{/unless}}private _{{this.name}}: {{this.type}} = {{{initialValue this.type}}}{{/each}}) {}

  {{#each props}}
  get {{this.name}}(): {{this.type}} { return this.{{this.name}}; }
  {{/each}}
  
  get packetId(): EPacketId { return EPacketId.{{upperSnakeCase name}}; }
  
  encode(): Uint8Array {
    const datas: any[] = [this.packetId];

    {{#each props}}
    datas.push(this._{{this.name}});
    {{/each}}
    
    return encode(datas);
  }

  decode(buffer: Buffer): void {
    const [_, {{#each props}}{{#unless @first}}, {{/unless}}{{this.name}}{{/each}}] = decode(buffer) as [EPacketId, {{#each props}}{{#unless @first}} ,{{/unless}}{{this.type}}{{/each}}];
    {{#each props}}
    this._{{this.name}} = {{this.name}};
    {{/each}}
  }
}
